[options]
cleanOutFolders = True ; Will remove auxiliary output folder (such as MG5 output)
keepLHE = False
runMG = True
runSlhaCreator = True
ncpu = 20 ; Number of CPUs to run jobs (if multiple parameters are chosen). Negative number means all machine cpus
#Turn width computation on/off
computeWidths = True ;If True, it will compute widths/BRs for all model particles
#List of all PDGS to which compute xsecs for. All combinations of final states will be generated (whenever allowed):
computeXsecsFor = [5000521,42]  ; Only revelant for the automatic generation of a process card
modelFolder = ./Feynrules/LQDM_UFO
[MadGraphPars]
#MG5 Cards:
paramcard = ./inputCards/param_card.dat ; If not defined, will use the default one
runcard = ./inputCards/run_card.dat ; If not defined, it will use the default one
proccard = inputCards/proc_card_all.dat ; If not defined or does not exist, it will be automatically generated
#Folder to store the process generation output (if it already exists, will skip the process generation)
processFolder = ./outputDir/MG5_output/proc-LQ
#MG5 path
MG5path = ./MG5
#Output folder:
mg5out = "./outputDir/MG5_output/Mchi1_%1.0f_Mchi0_%1.0f" %(${MadGraphSet:Mchi1},${MadGraphSet:Mchi0})
#Number of cores to run MG5:
ncores = 2
[MadGraphOptions]
#List of options for generating events
pythia = OFF
madspin = OFF
delphes = OFF
pgs = OFF
#List of model parameters. Only values in this section are allowed as lists (for loops)
[MadGraphSet]
ebeam1 = 6500
ebeam2 = ${MadGraphSet:ebeam1}
Mchi1 = $loop{[200.,250.,300.,350.,400.,450.,500.,550.]}
Mchi0 = ${MadGraphSet:Mchi1}-${MadGraphSet:dM}
dM = $loop{[70.,90.]}
MLQ = 1000.
lamL3x3 = 0.16
lamR2x3  = 2.0
yDM = 0.2
nevents = 50000
[slhaCreator]
slhaout = "Mchi1_%1.0f_Mchi0_%1.0f_BM1.slha" %(${MadGraphSet:Mchi1},${MadGraphSet:Mchi0})
